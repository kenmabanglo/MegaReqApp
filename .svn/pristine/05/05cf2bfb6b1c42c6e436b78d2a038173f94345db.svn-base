import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormControl, FormGroup } from '@angular/forms';
import { MatDialog, MatDialogConfig } from '@angular/material/dialog';
import { AuthenticationService } from 'src/app/core/service';
import { AllApproversComponent } from 'src/app/shared/component/modals/all-approvers/all-approvers.component';
import { UserSearchComponent } from 'src/app/shared/component/modals/user-search/user-search.component';
import { User } from 'src/app/shared/interface';
import { NotificationService, UserService } from 'src/app/shared/service';

@Component({
  selector: 'app-user-approver',
  templateUrl: './user-approver.component.html',
  styleUrls: ['./user-approver.component.scss']
})
export class UserApproverComponent implements OnInit {
  isSaving = false; 

  form  = new FormGroup({
    userName: new FormControl(''),
    approverUserName: new FormControl(''), 
    positionName: new FormControl(''),
    branchCode: new FormControl(''),
    userAdd: new FormControl(''),
  });
  user: User;
  
  constructor(
    private fb: FormBuilder,
    private notif: NotificationService,
    private dialog: MatDialog,
    private userServ: UserService,
    private auth: AuthenticationService
  ) {
    this.auth.user.subscribe(x => this.user = x); 
   }

  ngOnInit(): void {
  }
  openSearch(action,event: Event) {
    event.preventDefault();

      //////console.log(data);
      const dialogConfig = new MatDialogConfig();
      dialogConfig.disableClose = true;
      dialogConfig.autoFocus = true;
      dialogConfig.width = '100%';
      dialogConfig.panelClass = ['modal-table-pane']; 

      const data = {
        userName: this.form.get('userName').value
      };

      dialogConfig.data  = data;

      if (action == 'userName') {
        const dialogRef = this.dialog.open(UserSearchComponent, dialogConfig); 
      
        dialogRef.afterClosed().subscribe(result => { 
            if (result) {
              console.log(result);
              this.form.patchValue(
                {userName: result.data.userName.trim()});
            }
          }
        );
      }

      else if (action=='approverUserName') {

      
        const dialogRef = this.dialog.open(AllApproversComponent, dialogConfig); 
      
        dialogRef.afterClosed().subscribe(result => { 
            if (result) {
             // console.log(result);
              this.form.patchValue(
                {approverUserName: result.data.userName.trim()});
            }
          }
        );
      }
       
     
  }

  cancel() {
    this.form.patchValue({
      userName: '',
      positionName: '',
      branchCode: '',
      approverUserName: ''
    });
    this.isSaving = false;
  }
  
  saveApprover() {
    this.isSaving = true;
    
    var data = this.form.getRawValue();
    data.userAdd = this.user.userName;
 
    if (data.userName == '' && data.approverUserName == '' && 
        data.positionName == '' && data.branchCode == '')
      {
        this.notif.error('Please input user/position/branch');
        this.isSaving = false;
      }
      else if (this.form.invalid)
      {
        this.notif.error('Please select approver');
        this.isSaving = false;
      }
      else {
          this.userServ.assignUserApprover(data)
          .subscribe({
            next: (data) => {
              if (data.responseCode == 1) {
                this.notif.success( data.responseMessage);
                this.isSaving = true;

              }
              else {
                let err = data.responseMessage != "" ? data.responseMessage : (data.dataSet.join("; "));
                this.notif.error(err);
                this.isSaving = false;
              }
            },
            error: (error) => {
              let err  = error.error.title || '';  
              this.notif.error(err);
              this.isSaving = false;
            },
          }); 
        }
  }
}
